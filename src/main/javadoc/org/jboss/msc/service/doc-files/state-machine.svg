<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2021, Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags. See the copyright.txt file in the
  ~ distribution for a full listing of individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">

<svg xmlns="http://www.w3.org/2000/svg"
    width="8.75in"
    height="6.25in"
    version="1.1">

    <defs>
        <linearGradient id="stateGradient" x1="0%" x2="0%" y1="0%" y2="100%">
            <stop offset="0%" stop-color="#77FF77" stop-opacity="1"/>
            <stop offset="100%" stop-color="#DDFFDD" stop-opacity="1"/>
        </linearGradient>
        <linearGradient id="transitionGradient" x1="0%" x2="0%" y1="0%" y2="100%">
            <stop offset="0%" stop-color="#FF7777" stop-opacity="1"/>
            <stop offset="100%" stop-color="#FFDDDD" stop-opacity="1"/>
        </linearGradient>
    </defs>


    <style xml:space="preserve" type="text/css">
        <![CDATA[
        text {
            stroke-width: 0.2px;
        }

        text tspan {
            stroke-width: 0.2px;
        }

        svg.state rect {
            stroke: #000000;
            fill: url(#stateGradient);
        }

        svg.state text.title {
            font-family: monospace;
            font-size: 11pt;
            stroke-width: 0.4px;
            stroke: #002244;
            fill: #002244;
            alignment-baseline: middle;
        }
        ]]>

        svg.transition rect {
            stroke: #000000;
            fill: url(#transitionGradient);
            height: 0.5in;
        }

        svg.transition text {
            font-family: Arial;
            font-size: 8pt;
            stroke: #000000;
            fill: #000000;
            stroke-width: 1px;
            alignment-baseline: hanging;
        }

        svg.transition text tspan {
            alignment-baseline: hanging;
            stroke: #000000;
            fill: #000000;
        }

        svg.transition text tspan.when {
            stroke-width: 0.3px;
            font-size: 9pt;
            stroke: #0000CC;
            fill: #0000CC;
        }

        svg.transition text tspan.action {
            stroke-width: 0.3px;
            font-size: 9pt;
            stroke: #CC0000;
            fill: #CC0000;
        }

        svg.transition text tspan.var {
            stroke: #005555;
            fill: #005555;
        }
    </style>

    <!-- "UP" state -->
    <svg class="state" x="3.50in" y="0in">
        <rect width="1.5in" height="0.25in" x="0" y="0"/>
        <text class="title" x="8pt" y="0.125in">UP</text>
        <svg class="transition" y="0.25in">
            <rect width="1.5in" height="1in"/>
            <text x="8pt" y="4pt">
                <tspan x="8pt" class="when">When:</tspan>
                <tspan x="16pt" dy="12pt" class="var">A</tspan><tspan> = 0</tspan>
                <tspan x="16pt" dy="10pt" class="var">U</tspan><tspan> ≤ 0</tspan>
                <tspan x="8pt" dy="12pt" class="action">Tasks:</tspan>
                <tspan x="16pt" dy="12pt" class="var">U</tspan><tspan>(children) --</tspan>
                <tspan x="16pt" dy="10pt">⇒ STOP_REQUESTED</tspan>
            </text>
        </svg>
    </svg>


    <!-- "STOP_REQUESTED" state -->
    <svg class="state" x="6in" y="0.5in">
        <rect width="2.5in" height="0.25in" x="0" y="0"/>
        <text class="title" x="8pt" y="0.125in">STOP_REQUESTED</text>
        <svg class="transition" y="0.25in">
            <rect width="1.25in" height="1.25in"/>
            <text x="8pt" y="4pt">
                <tspan x="8pt" class="when">When:</tspan>
                <tspan x="16pt" dy="12pt" class="var">A</tspan><tspan> = 0</tspan>
                <tspan x="16pt" dy="10pt" class="var">U</tspan><tspan> > 0</tspan>
                <tspan x="8pt" dy="12pt" class="action">Tasks:</tspan>
                <tspan x="16pt" dy="12pt" class="var">U</tspan><tspan>(children) ++</tspan>
                <tspan x="16pt" dy="10pt">⇒ UP</tspan>
            </text>
        </svg>

        <svg class="transition" x="1.25in" y="0.25in">
            <rect width="1.25in" height="1.25in"/>
            <text x="8pt" y="4pt">
                <tspan x="8pt" class="when">When:</tspan>
                <tspan x="16pt" dy="12pt" class="var">A</tspan><tspan> = 0</tspan>
                <tspan x="16pt" dy="10pt" class="var">R</tspan><tspan> = 0</tspan>
                <tspan x="8pt" dy="12pt" class="action">Tasks:</tspan>
                <tspan x="16pt" dy="12pt">Invoke Listeners</tspan>
                <tspan x="16pt" dy="10pt">Invoke Stop &amp; </tspan>
                <tspan x="24pt" dy="9pt">Uninjection</tspan>
                <tspan x="16pt" dy="10pt">⇒ STOPPING</tspan>
            </text>
        </svg>
    </svg>

    <!-- "STOPPING" state -->
    <svg class="state" x="7in" y="2.75in">
        <rect width="1.5in" height="0.25in" x="0" y="0"/>
        <text class="title" x="8pt" y="0.125in">STOPPING</text>
        <svg class="transition" y="0.25in">
            <rect width="1.5in" height="1in"/>
            <text x="8pt" y="4pt">
                <tspan x="8pt" class="when">When:</tspan>
                <tspan x="16pt" dy="12pt" class="var">A</tspan><tspan> = 0</tspan>
                <tspan x="8pt" dy="12pt" class="action">Tasks:</tspan>
                <tspan x="16pt" dy="12pt">Invoke Listeners</tspan>
                <tspan x="16pt" dy="10pt" class="var">R</tspan><tspan>(parents) --</tspan>
                <tspan x="16pt" dy="10pt">⇒ DOWN</tspan>
            </text>
        </svg>
    </svg>

    <!-- "DOWN" state -->
    <svg class="state" x="2.75in" y="4in">
        <rect width="3in" height="0.25in" x="0" y="0"/>
        <text class="title" x="8pt" y="0.125in">DOWN</text>
        <svg class="transition" y="0.25in">
            <rect width="1.5in" height="1.25in"/>
            <text x="8pt" y="4pt">
                <tspan x="8pt" class="when">When:</tspan>
                <tspan x="16pt" dy="12pt" class="var">A</tspan><tspan> = 0</tspan>
                <tspan x="16pt" dy="10pt" class="var">U</tspan><tspan> > 0</tspan>
                <tspan x="16pt" dy="10pt" class="var">MODE</tspan><tspan> ≠ NEVER</tspan>
                <tspan x="16pt" dy="10pt" class="var">MODE</tspan><tspan> ≠ REMOVE</tspan>
                <tspan x="8pt" dy="12pt" class="action">Tasks:</tspan>
                <tspan x="16pt" dy="12pt" class="var">R</tspan><tspan>(parents) ++</tspan>
                <tspan x="16pt" dy="10pt">⇒ START_REQUESTED</tspan>
            </text>
        </svg>

        <svg class="transition" x="1.5in" y="0.25in">
            <rect width="1.5in" height="1.25in"/>
            <text x="8pt" y="4pt">
                <tspan x="8pt" class="when">When:</tspan>
                <tspan x="16pt" dy="12pt" class="var">A</tspan><tspan> = 0</tspan>
                <tspan x="16pt" dy="10pt" class="var">MODE</tspan><tspan> = REMOVE</tspan>
                <tspan x="8pt" dy="12pt" class="action">Tasks:</tspan>
                <tspan x="16pt" dy="12pt">Invoke Listeners</tspan>
                <tspan x="16pt" dy="10pt">Remove Listeners</tspan>
                <tspan x="16pt" dy="10pt">⇒ REMOVED</tspan>
            </text>
        </svg>
    </svg>

    <!-- "START_REQUESTED" state -->
    <svg class="state" x="0in" y="2.75in">
        <rect width="2.5in" height="0.25in" x="0" y="0"/>
        <text class="title" x="8pt" y="0.125in">START_REQUESTED</text>
        <svg class="transition" y="0.25in">
            <rect width="1.25in" height="1.25in"/>
            <text x="8pt" y="4pt">
                <tspan x="8pt" class="when">When:</tspan>
                <tspan x="16pt" dy="12pt" class="var">A</tspan><tspan> = 0</tspan>
                <tspan x="16pt" dy="10pt" class="var">U</tspan><tspan> > 0</tspan>
                <tspan x="8pt" dy="12pt" class="action">Tasks:</tspan>
                <tspan x="16pt" dy="12pt">Invoke Listeners</tspan>
                <tspan x="16pt" dy="10pt">Invoke Start &amp; </tspan>
                <tspan x="24pt" dy="9pt">Injection</tspan>
                <tspan x="16pt" dy="10pt">⇒ STARTING</tspan>
            </text>
        </svg>

        <svg class="transition" x="1.25in" y="0.25in">
            <rect width="1.25in" height="1.25in"/>
            <text x="8pt" y="4pt">
                <tspan x="8pt" class="when">When:</tspan>
                <tspan x="16pt" dy="12pt" class="var">A</tspan><tspan> = 0</tspan>
                <tspan x="16pt" dy="10pt" class="var">U</tspan><tspan> ≤ 0</tspan>
                <tspan x="8pt" dy="12pt" class="action">Tasks:</tspan>
                <tspan x="16pt" dy="12pt" class="var">R</tspan><tspan>(parents) --</tspan>
                <tspan x="16pt" dy="10pt">⇒ DOWN</tspan>
            </text>
        </svg>
    </svg>

    <!-- "STARTING" state -->
    <svg class="state" x="0" y="0.5in">
        <rect width="2.5in" height="0.25in" x="0" y="0"/>
        <text class="title" x="8pt" y="0.125in">STARTING</text>
        <svg class="transition" y="0.25in">
            <rect width="1.25in" height="1.25in"/>
            <text x="8pt" y="4pt">
                <tspan x="8pt" class="when">When:</tspan>
                <tspan x="16pt" dy="12pt" class="var">A</tspan><tspan> = 0</tspan>
                <tspan x="16pt" dy="10pt" class="var">X</tspan><tspan> = null</tspan>
                <tspan x="8pt" dy="12pt" class="action">Tasks:</tspan>
                <tspan x="16pt" dy="12pt">Invoke Listeners</tspan>
                <tspan x="16pt" dy="12pt" class="var">U</tspan><tspan>(children) ++</tspan>
                <tspan x="16pt" dy="10pt">⇒ UP</tspan>
            </text>
        </svg>

        <svg class="transition" x="1.25in" y="0.25in">
            <rect width="1.25in" height="1.25in"/>
            <text x="8pt" y="4pt">
                <tspan x="8pt" class="when">When:</tspan>
                <tspan x="16pt" dy="12pt" class="var">A</tspan><tspan> = 0</tspan>
                <tspan x="16pt" dy="10pt" class="var">X</tspan><tspan> ≠ null</tspan>
                <tspan x="8pt" dy="12pt" class="action">Tasks:</tspan>
                <tspan x="16pt" dy="12pt">Invoke Listeners</tspan>
                <tspan x="16pt" dy="10pt">⇒ START_FAILED</tspan>
            </text>
        </svg>
    </svg>

    <!-- "START_FAILED" state -->
    <svg class="state" x="2.75in" y="1.75in">
        <rect width="2.5in" height="0.25in" x="0" y="0"/>
        <text class="title" x="8pt" y="0.125in">START_FAILED</text>
        <svg class="transition" y="0.25in">
            <rect width="1.25in" height="1.25in"/>
            <text x="8pt" y="4pt">
                <tspan x="8pt" class="when">When:</tspan>
                <tspan x="16pt" dy="12pt" class="var">A</tspan><tspan> = 0</tspan>
                <tspan x="16pt" dy="10pt" class="var">Retry</tspan><tspan> = true</tspan>
                <tspan x="16pt" dy="10pt" class="var">U</tspan><tspan> > 0</tspan>
                <tspan x="8pt" dy="12pt" class="action">Tasks:</tspan>
                <tspan x="16pt" dy="12pt">Invoke Listeners</tspan>
                <tspan x="16pt" dy="10pt">Invoke Start</tspan>
                <tspan x="16pt" dy="10pt">⇒ STARTING</tspan>
            </text>
        </svg>

        <svg class="transition" x="1.25in" y="0.25in">
            <rect width="1.25in" height="1.25in"/>
            <text x="8pt" y="4pt">
                <tspan x="8pt" class="when">When:</tspan>
                <tspan x="16pt" dy="12pt" class="var">A</tspan><tspan> = 0</tspan>
                <tspan x="16pt" dy="10pt" class="var">X</tspan><tspan> ≠ null</tspan>
                <tspan x="8pt" dy="12pt" class="action">Tasks:</tspan>
                <tspan x="16pt" dy="12pt">Invoke Uninject &amp;</tspan>
                <tspan x="24pt" dy="9pt">Listeners</tspan>
                <tspan x="16pt" dy="10pt" class="var">R</tspan><tspan>(parents) --</tspan>
                <tspan x="16pt" dy="10pt">⇒ DOWN</tspan>
            </text>
        </svg>
    </svg>

    <svg class="state" x="2.75in" y="6in">
        <rect width="3in" height="0.25in" x="0" y="0"/>
        <text class="title" x="8pt" y="0.125in">REMOVED</text>
    </svg>
</svg>
