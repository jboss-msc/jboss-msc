#
# JBoss, Home of Professional Open Source.
# Copyright 2011, Red Hat, Inc., and individual contributors
# as indicated by the @author tags. See the copyright.txt file in the
# distribution for a full listing of individual contributors.
#
# This is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA, or see the FSF site: http://www.fsf.org.
#

RULE service on STOP_REQUESTED
CLASS org.jboss.msc.service.ServiceControllerImpl$DependencyStoppedTask
METHOD run
AT ENTRY
BIND NOTHING
IF incrementCounter("run rule only once") == 1
DO
   # DependencyStoppedTask will be able of acquiring the ServiceControllerImpl lock only after
   # shouldStop() returns false, thus causing the service to transition from STOP_REQUESTED to UP
   debug("wait for setMode(Mode.ACTIVE)"),
   signalWake("STOP_REQUESTED state", true),
   waitFor("setMode_ACTIVE", 100000),
   debug("go STOP_REQUESTED_to_UP transition")
ENDRULE

RULE before setMode(Mode.ACTIVE)
CLASS org.jboss.msc.service.ServiceControllerImpl
METHOD setMode
AT ENTRY
BIND NOTHING
IF $1 == org.jboss.msc.service.ServiceController$Mode.ACTIVE AND NOT $0.state.toString().equals("NEW")
DO
   # Make sure that there is enough time for ServiceController to enter STOP_REQUESTED state,
   # before we set the mode to ACTIVE
   waitFor("STOP_REQUESTED state", 100000),
   debug("go setMode(Mode.ACTIVE)")
ENDRULE

RULE after setMode(Mode.ACTIVE)
CLASS org.jboss.msc.service.ServiceControllerImpl 
METHOD setMode
AT EXIT
BIND NOTHING
IF $1 == org.jboss.msc.service.ServiceController$Mode.ACTIVE AND $0.state.toString().equals("STOP_REQUESTED")
DO
    # signal UpRequested, making the service controller to enter the exact transition that we need to
    # test: STOP_REQUESTED_to_UP
    debug("signalling UP_REQUESTED state"),
    signalWake("setMode_ACTIVE", true),
    debug("signalled UP_REQUESTED state")
ENDRULE